"use client"

import { useState } from "react"
import { Play, ChevronLeft, ChevronRight, CheckCircle2 } from "lucide-react"
import { Button } from "@/components/ui/button"
import { GradientBorder } from "./fixed-border"

export function ArsenalHero() {
  const [currentSlide, setCurrentSlide] = useState(0)

  const customerPhotos = ["/customer-photo-1.jpg", "/customer-photo-2.jpg", "/customer-photo-3.jpg"]

  const nextSlide = () => {
    setCurrentSlide((prev) => (prev + 1) % customerPhotos.length)
  }

  const prevSlide = () => {
    setCurrentSlide((prev) => (prev - 1 + customerPhotos.length) % customerPhotos.length)
  }

  return (
    <div className="relative w-full  h-full rounded-3xl overflow-hidden">
      {/* Background Image with Overlay */}
      <div
        className="absolute inset-0 bg-cover bg-center"
        style={{
          backgroundImage: "url(/emirates-stadium-background.jpg)",
        }}
      >
        <div className="absolute inset-0 bg-gradient-to-r from-[#3554d1]/80 via-blue-800/10 to-[#3554d1]/35" />
      </div>

      {/* Content Container */}
      <div className="relative h-full flex items-center justify-between px-12 py-10">
        {/* Left Content */}
        <div className="flex-1  max-w-3xl space-y-15 lg:space-y-6 ">
          <div className="space-y-4">
            <h1 className="text-6xl font-bold text-white leading-tight">Arsenal Tickets</h1>
            <p className="text-lg text-white/90 leading-relaxed max-w-xl">
              Buy Arsenal tickets for Premier League, Champions League, and Cup matches at Emirates Stadium. Secure your
              seats to watch the Gunners live in action.
            </p>
          </div>

          {/* Video Testimonial Button */}
          <button className="flex items-center gap-3 group">
            <div className="relative">
              <GradientBorder size={80} borderWidth={2} gap={4}>
                <img src="/customer-photo-1.jpg" alt="Customer testimonial" className="w-full h-full object-cover" />
              </GradientBorder>
              <div className="absolute top-7 -right-3 w-8 h-8 bg-white border-[3px] border-[#3554D1] rounded-full flex items-center justify-center shadow-lg group-hover:scale-110 transition-transform">
                <Play className="w-3 h-3 text-blue-600 fill-blue-600 ml-0.5" />
              </div>
            </div>
            <span className="text-white/90 text-sm text-start ml-2">
              Watch some highlights from our
              <br />
              customers
            </span>
          </button>

          {/* Trustpilot Rating */}
          <div className="flex items-center gap-3 rounded-full px-5 py-3 w-fit  p-2">
            <span className="text-white font-semibold">Excellent</span>
            <div className="flex gap-1">
              {[...Array(5)].map((_, i) => (
             <span className="bg-[#219653] p-[2px]">
                <svg width="14" height="14"  viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg">
               <path d="M6.99976 10.479L10.0414 9.7082L11.3123 13.6249L6.99976 10.479ZM13.9998 5.41653H8.64559L6.99976 0.374863L5.35392 5.41653H-0.000244141L4.33309 8.54153L2.68725 13.5832L7.02059 10.4582L9.68725 8.54153L13.9998 5.41653Z" fill="white"/>
               </svg>
             </span>
               
                
              ))}
            </div>
            <span className="text-white font-semibold">436</span>
            <span className="text-white">reviews on</span>
            <svg width="72" height="26" viewBox="0 0 72 26" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M7.66666 16.4792L10.7083 15.7083L11.9792 19.625L7.66666 16.4792ZM14.6667 11.4167H9.31249L7.66666 6.375L6.02082 11.4167H0.666656L4.99999 14.5417L3.35415 19.5833L7.68749 16.4583L10.3542 14.5417L14.6667 11.4167Z" fill="#219653"/>
<path d="M23.2428 8.46875V17H21.4909V8.46875H23.2428ZM25.8678 8.46875V9.8457H18.9069V8.46875H25.8678ZM28.0417 12.043V17H26.3542V10.6602H27.942L28.0417 12.043ZM29.9518 10.6191L29.9225 12.1836C29.8405 12.1719 29.7409 12.1621 29.6237 12.1543C29.5104 12.1426 29.4069 12.1367 29.3131 12.1367C29.0749 12.1367 28.8678 12.168 28.692 12.2305C28.5202 12.2891 28.3756 12.377 28.2585 12.4941C28.1452 12.6113 28.0592 12.7539 28.0006 12.9219C27.946 13.0898 27.9147 13.2812 27.9069 13.4961L27.567 13.3906C27.567 12.9805 27.6081 12.6035 27.6901 12.2598C27.7721 11.9121 27.8913 11.6094 28.0475 11.3516C28.2077 11.0938 28.403 10.8945 28.6335 10.7539C28.8639 10.6133 29.1276 10.543 29.4245 10.543C29.5182 10.543 29.6139 10.5508 29.7116 10.5664C29.8092 10.5781 29.8893 10.5957 29.9518 10.6191ZM34.4987 15.4824V10.6602H36.1862V17H34.5983L34.4987 15.4824ZM34.6862 14.1816L35.1842 14.1699C35.1842 14.5918 35.1354 14.9844 35.0378 15.3477C34.9401 15.707 34.7936 16.0195 34.5983 16.2852C34.403 16.5469 34.1569 16.752 33.86 16.9004C33.5631 17.0449 33.2135 17.1172 32.8112 17.1172C32.5026 17.1172 32.2174 17.0742 31.9557 16.9883C31.6979 16.8984 31.4753 16.7598 31.2878 16.5723C31.1042 16.3809 30.9596 16.1367 30.8542 15.8398C30.7526 15.5391 30.7018 15.1777 30.7018 14.7559V10.6602H32.3893V14.7676C32.3893 14.9551 32.4108 15.1133 32.4538 15.2422C32.5006 15.3711 32.5651 15.4766 32.6471 15.5586C32.7292 15.6406 32.8249 15.6992 32.9342 15.7344C33.0475 15.7695 33.1725 15.7871 33.3092 15.7871C33.6569 15.7871 33.9303 15.7168 34.1295 15.5762C34.3327 15.4355 34.4753 15.2441 34.5573 15.002C34.6432 14.7559 34.6862 14.4824 34.6862 14.1816ZM40.903 15.248C40.903 15.127 40.8678 15.0176 40.7975 14.9199C40.7272 14.8223 40.5963 14.7324 40.4049 14.6504C40.2174 14.5645 39.946 14.4863 39.5905 14.416C39.2702 14.3457 38.9713 14.2578 38.694 14.1523C38.4206 14.043 38.1823 13.9121 37.9792 13.7598C37.7799 13.6074 37.6237 13.4277 37.5104 13.2207C37.3971 13.0098 37.3405 12.7695 37.3405 12.5C37.3405 12.2344 37.3971 11.9844 37.5104 11.75C37.6276 11.5156 37.7936 11.3086 38.0085 11.1289C38.2272 10.9453 38.4928 10.8027 38.8053 10.7012C39.1217 10.5957 39.4772 10.543 39.8717 10.543C40.4225 10.543 40.8952 10.6309 41.2897 10.8066C41.6881 10.9824 41.9928 11.2246 42.2038 11.5332C42.4186 11.8379 42.526 12.1855 42.526 12.5762H40.8385C40.8385 12.4121 40.8034 12.2656 40.7331 12.1367C40.6667 12.0039 40.5612 11.9004 40.4167 11.8262C40.276 11.748 40.0924 11.709 39.8659 11.709C39.6784 11.709 39.5163 11.7422 39.3795 11.8086C39.2428 11.8711 39.1374 11.957 39.0631 12.0664C38.9928 12.1719 38.9577 12.2891 38.9577 12.418C38.9577 12.5156 38.9772 12.6035 39.0163 12.6816C39.0592 12.7559 39.1276 12.8242 39.2213 12.8867C39.3151 12.9492 39.4362 13.0078 39.5846 13.0625C39.737 13.1133 39.9245 13.1602 40.1471 13.2031C40.6042 13.2969 41.0124 13.4199 41.3717 13.5723C41.7311 13.7207 42.0163 13.9238 42.2272 14.1816C42.4381 14.4355 42.5436 14.7695 42.5436 15.1836C42.5436 15.4648 42.4811 15.7227 42.3561 15.957C42.2311 16.1914 42.0514 16.3965 41.817 16.5723C41.5827 16.7441 41.3014 16.8789 40.9733 16.9766C40.6491 17.0703 40.2838 17.1172 39.8776 17.1172C39.2878 17.1172 38.7878 17.0117 38.3776 16.8008C37.9713 16.5898 37.6628 16.3223 37.4518 15.998C37.2448 15.6699 37.1413 15.334 37.1413 14.9902H38.7409C38.7487 15.2207 38.8073 15.4062 38.9167 15.5469C39.0299 15.6875 39.1725 15.7891 39.3444 15.8516C39.5202 15.9141 39.7096 15.9453 39.9128 15.9453C40.1315 15.9453 40.3131 15.916 40.4577 15.8574C40.6022 15.7949 40.7116 15.7129 40.7858 15.6113C40.8639 15.5059 40.903 15.3848 40.903 15.248ZM46.7448 10.6602V11.8555H43.0534V10.6602H46.7448ZM43.9674 9.0957H45.6549V15.0898C45.6549 15.2734 45.6784 15.4141 45.7253 15.5117C45.776 15.6094 45.8503 15.6777 45.9479 15.7168C46.0456 15.752 46.1686 15.7695 46.317 15.7695C46.4225 15.7695 46.5163 15.7656 46.5983 15.7578C46.6842 15.7461 46.7565 15.7344 46.8151 15.7227L46.821 16.9648C46.6764 17.0117 46.5202 17.0488 46.3522 17.0762C46.1842 17.1035 45.9987 17.1172 45.7956 17.1172C45.4245 17.1172 45.1003 17.0566 44.8229 16.9355C44.5495 16.8105 44.3385 16.6113 44.1901 16.3379C44.0417 16.0645 43.9674 15.7051 43.9674 15.2598V9.0957ZM49.3932 11.8789V19.4375H47.7057V10.6602H49.2702L49.3932 11.8789ZM53.4069 13.7598V13.8828C53.4069 14.3438 53.3522 14.7715 53.2428 15.166C53.1374 15.5605 52.9811 15.9043 52.7741 16.1973C52.567 16.4863 52.3092 16.7129 52.0006 16.877C51.696 17.0371 51.3444 17.1172 50.946 17.1172C50.5592 17.1172 50.2233 17.0391 49.9381 16.8828C49.653 16.7266 49.4128 16.5078 49.2174 16.2266C49.026 15.9414 48.8717 15.6113 48.7545 15.2363C48.6374 14.8613 48.5475 14.459 48.485 14.0293V13.707C48.5475 13.2461 48.6374 12.8242 48.7545 12.4414C48.8717 12.0547 49.026 11.7207 49.2174 11.4395C49.4128 11.1543 49.651 10.9336 49.9323 10.7773C50.2174 10.6211 50.5514 10.543 50.9342 10.543C51.3366 10.543 51.6901 10.6191 51.9948 10.7715C52.3034 10.9238 52.5612 11.1426 52.7682 11.4277C52.9792 11.7129 53.1374 12.0527 53.2428 12.4473C53.3522 12.8418 53.4069 13.2793 53.4069 13.7598ZM51.7135 13.8828V13.7598C51.7135 13.4902 51.6901 13.2422 51.6432 13.0156C51.6003 12.7852 51.5299 12.584 51.4323 12.4121C51.3385 12.2402 51.2135 12.1074 51.0573 12.0137C50.9049 11.916 50.7194 11.8672 50.5006 11.8672C50.2702 11.8672 50.0729 11.9043 49.9088 11.9785C49.7487 12.0527 49.6178 12.1602 49.5163 12.3008C49.4147 12.4414 49.3385 12.6094 49.2878 12.8047C49.237 13 49.2057 13.2207 49.194 13.4668V14.2812C49.2135 14.5703 49.2682 14.8301 49.3581 15.0605C49.4479 15.2871 49.5866 15.4668 49.7741 15.5996C49.9616 15.7324 50.2077 15.7988 50.5124 15.7988C50.735 15.7988 50.9225 15.75 51.0749 15.6523C51.2272 15.5508 51.3503 15.4121 51.444 15.2363C51.5417 15.0605 51.61 14.8574 51.6491 14.627C51.692 14.3965 51.7135 14.1484 51.7135 13.8828ZM56.237 10.6602V17H54.5436V10.6602H56.237ZM54.4381 9.00781C54.4381 8.76172 54.5241 8.55859 54.696 8.39844C54.8678 8.23828 55.0983 8.1582 55.3874 8.1582C55.6725 8.1582 55.901 8.23828 56.0729 8.39844C56.2487 8.55859 56.3366 8.76172 56.3366 9.00781C56.3366 9.25391 56.2487 9.45703 56.0729 9.61719C55.901 9.77734 55.6725 9.85742 55.3874 9.85742C55.0983 9.85742 54.8678 9.77734 54.696 9.61719C54.5241 9.45703 54.4381 9.25391 54.4381 9.00781ZM59.4128 8V17H57.7194V8H59.4128ZM60.5378 13.8945V13.7715C60.5378 13.3066 60.6042 12.8789 60.737 12.4883C60.8698 12.0938 61.0631 11.752 61.317 11.4629C61.571 11.1738 61.8835 10.9492 62.2545 10.7891C62.6256 10.625 63.0514 10.543 63.5319 10.543C64.0124 10.543 64.4401 10.625 64.8151 10.7891C65.1901 10.9492 65.5045 11.1738 65.7585 11.4629C66.0163 11.752 66.2116 12.0938 66.3444 12.4883C66.4772 12.8789 66.5436 13.3066 66.5436 13.7715V13.8945C66.5436 14.3555 66.4772 14.7832 66.3444 15.1777C66.2116 15.5684 66.0163 15.9102 65.7585 16.2031C65.5045 16.4922 65.192 16.7168 64.821 16.877C64.4499 17.0371 64.0241 17.1172 63.5436 17.1172C63.0631 17.1172 62.6354 17.0371 62.2604 16.877C61.8893 16.7168 61.5749 16.4922 61.317 16.2031C61.0631 15.9102 60.8698 15.5684 60.737 15.1777C60.6042 14.7832 60.5378 14.3555 60.5378 13.8945ZM62.2253 13.7715V13.8945C62.2253 14.1602 62.2487 14.4082 62.2956 14.6387C62.3424 14.8691 62.4167 15.0723 62.5182 15.248C62.6237 15.4199 62.7604 15.5547 62.9284 15.6523C63.0963 15.75 63.3014 15.7988 63.5436 15.7988C63.778 15.7988 63.9792 15.75 64.1471 15.6523C64.3151 15.5547 64.4499 15.4199 64.5514 15.248C64.653 15.0723 64.7272 14.8691 64.7741 14.6387C64.8249 14.4082 64.8503 14.1602 64.8503 13.8945V13.7715C64.8503 13.5137 64.8249 13.2715 64.7741 13.0449C64.7272 12.8145 64.651 12.6113 64.5456 12.4355C64.444 12.2559 64.3092 12.1152 64.1413 12.0137C63.9733 11.9121 63.7702 11.8613 63.5319 11.8613C63.2936 11.8613 63.0905 11.9121 62.9225 12.0137C62.7585 12.1152 62.6237 12.2559 62.5182 12.4355C62.4167 12.6113 62.3424 12.8145 62.2956 13.0449C62.2487 13.2715 62.2253 13.5137 62.2253 13.7715ZM70.6862 10.6602V11.8555H66.9948V10.6602H70.6862ZM67.9088 9.0957H69.5963V15.0898C69.5963 15.2734 69.6198 15.4141 69.6667 15.5117C69.7174 15.6094 69.7917 15.6777 69.8893 15.7168C69.987 15.752 70.11 15.7695 70.2585 15.7695C70.3639 15.7695 70.4577 15.7656 70.5397 15.7578C70.6256 15.7461 70.6979 15.7344 70.7565 15.7227L70.7624 16.9648C70.6178 17.0117 70.4616 17.0488 70.2936 17.0762C70.1256 17.1035 69.9401 17.1172 69.737 17.1172C69.3659 17.1172 69.0417 17.0566 68.7643 16.9355C68.4909 16.8105 68.2799 16.6113 68.1315 16.3379C67.9831 16.0645 67.9088 15.7051 67.9088 15.2598V9.0957Z" fill="white"/>
</svg>

          </div>
        </div>

        {/* Right Content */}
        <div className="flex-col hidden lg:flex  h-full py-4 gap-6 ">
          {/* Guarantee Badges */}
          <div className="space-y-2 ml-auto ">
            <div className="flex ml-auto items-center gap-2 text-white/90 bg-gradient-blur  w-fit rounded-full p-2">
              <CheckCircle2 className="w-4 h-4" />
              <span className="text-sm ">24/7 travel butler</span>
            </div>
            <div className="flex ml-auto items-center gap-2 text-white/90 bg-gradient-blur w-fit rounded-full p-2">
              <CheckCircle2 className="w-4 h-4" />
              <span className="text-sm ">Best price are guaranteed</span>
            </div>
            <div className="flex ml-auto items-center gap-2 text-white/90 bg-gradient-blur w-fit rounded-full p-2">
              <CheckCircle2 className="w-4 h-4" />
              <span className="text-sm ">We guarantee seats together</span>
            </div>
          </div>

          {/* Customer Photos Carousel */}
          <div className="space-y-2  bg-[#3554D1B2] backdrop-blur-sm p-3 rounded-2xl">
            <div className="flex gap-2 items-center justify-center">
              {customerPhotos.map((photo, index) => (
                <div
                  key={index}
                  className={`relative h-40 rounded-xl overflow-hidden border-2 shadow-lg flex-shrink-0 transition-all ${
                    index === currentSlide ? "w-[300px] border-white/50 shadow-xl" : "w-[100px] border-white/30"
                  }`}
                >
                  <img
                    src={photo || "/placeholder.svg"}
                    alt={`Customer photo ${index + 1}`}
                    className="w-full h-full object-cover"
                  />
                  {index !== currentSlide && (
                    <div className="absolute inset-0 bg-gradient-to-b from-black/20 to-black/40" />
                  )}
                </div>
              ))}
            </div>

            {/* Carousel Controls */}
            <div className="flex items-center justify-between px-2">
              <div className="flex gap-1.5">
                {customerPhotos.map((_, index) => (
                  <button
                    key={index}
                    onClick={() => setCurrentSlide(index)}
                    className={`h-1.5 rounded-full transition-all ${
                      index === currentSlide ? "w-8 bg-white" : "w-1.5 bg-white/40"
                    }`}
                    aria-label={`Go to slide ${index + 1}`}
                  />
                ))}
              </div>
              <div className="flex gap-2 mt-2">
                <Button
                  size="icon"
                  variant="ghost"
                  onClick={prevSlide}
                  className="h-6 w-6 rounded-full border border-white bg-none hover:bg-white/30 text-white"
                >
                  <ChevronLeft className="h-4 w-4 text-white" />
                </Button>
                <Button
                  size="icon"
                  variant="ghost"
                  onClick={nextSlide}
                  className="h-6 w-6 rounded-full border border-white bg-none  hover:bg-white/30 text-white"
                >
                  <ChevronRight className="h-4 w-4 text-white" />
                </Button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  )
}
